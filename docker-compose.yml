version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: autoflow-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${PGDATABASE:-autoflow_gms}
      POSTGRES_USER: ${PGUSER:-autoflow_user}
      POSTGRES_PASSWORD: ${PGPASSWORD:-changeme123}
    ports:
      - "${PGPORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PGUSER:-autoflow_user}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # AutoFlow GMS Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: autoflow-gms
    restart: unless-stopped
    ports:
      - "${PORT:-5000}:5000"
    environment:
      NODE_ENV: production
      PORT: 5000
      
      # Database Configuration
      DATABASE_URL: postgresql://${PGUSER:-autoflow_user}:${PGPASSWORD:-changeme123}@postgres:5432/${PGDATABASE:-autoflow_gms}
      PGHOST: postgres
      PGPORT: 5432
      PGDATABASE: ${PGDATABASE:-autoflow_gms}
      PGUSER: ${PGUSER:-autoflow_user}
      PGPASSWORD: ${PGPASSWORD:-changeme123}
      
      # Session Secret
      SESSION_SECRET: ${SESSION_SECRET:-your-secret-key-change-in-production}
      
      # OpenID Connect (if using external auth)
      ISSUER_URL: ${ISSUER_URL:-}
      CLIENT_ID: ${CLIENT_ID:-}
      CLIENT_SECRET: ${CLIENT_SECRET:-}
      REDIRECT_URI: ${REDIRECT_URI:-}
      
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./server:/app/server
      - ./shared:/app/shared
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local
